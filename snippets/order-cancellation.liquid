{%- comment -%}
Order Cancellation Handler Snippet
This snippet provides server-side order cancellation logic
{%- endcomment -%}

{%- if request.method == 'POST' and request.form.action == 'cancel_order' -%}
  {%- liquid
    assign order_name = request.form.order_name
    assign cancellation_reason = request.form.cancellation_reason
    assign current_order = null
    
    # Find the order by name/number
    for customer_order in customer.orders
      if customer_order.name == order_name
        assign current_order = customer_order
        break
      endif
    endfor
  -%}
  
  {%- if current_order and current_order.cancelled == false -%}
    {%- comment -%}
    Since we can't directly cancel orders via Liquid, we'll:
    1. Add order attributes/notes indicating cancellation request
    2. Use JavaScript to attempt API calls
    3. Provide fallback mechanisms
    {%- endcomment -%}
    
    {%- assign cancellation_data = '' -%}
    {%- assign cancellation_data = cancellation_data | append: 'order_id:' | append: current_order.id -%}
    {%- assign cancellation_data = cancellation_data | append: '|reason:' | append: cancellation_reason -%}
    {%- assign cancellation_data = cancellation_data | append: '|timestamp:' | append: 'now' | date: '%Y-%m-%d %H:%M:%S' -%}
    
    <script>
      // Attempt to cancel the order through available APIs
      (function() {
        const orderData = {
          orderId: '{{ current_order.id }}',
          orderName: '{{ current_order.name }}',
          reason: '{{ cancellation_reason | default: "Customer requested cancellation" }}',
          customerId: '{{ customer.id }}'
        };
        
        // Try multiple cancellation methods
        async function cancelOrder() {
          try {
            // Method 1: Try Shopify Admin API (if available through app proxy)
            const response = await fetch('/apps/cancel-order', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
                'X-Requested-With': 'XMLHttpRequest'
              },
              body: JSON.stringify(orderData)
            });
            
            if (response.ok) {
              const result = await response.json();
              if (result.success) {
                alert('✅ Order cancelled successfully!');
                window.location.reload();
                return;
              }
            }
          } catch (error) {
            console.log('Admin API method failed:', error);
          }
          
          try {
            // Method 2: Create customer note with cancellation request
            const noteData = {
              'customer': {
                'id': orderData.customerId,
                'note': `CANCELLATION REQUEST - Order: ${orderData.orderName}, Reason: ${orderData.reason}, Date: ${new Date().toISOString()}`
              }
            };
            
            // This would need to be handled by a Shopify app or webhook
            await fetch('/customer/update', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify(noteData)
            });
          } catch (error) {
            console.log('Customer note method failed:', error);
          }
          
          // Method 3: Email notification to admin
          const subject = encodeURIComponent(`URGENT: Order Cancellation - ${orderData.orderName}`);
          const body = encodeURIComponent(
            `Order Cancellation Request\n\n` +
            `Order: ${orderData.orderName}\n` +
            `Customer: {{ customer.email }}\n` +
            `Reason: ${orderData.reason}\n` +
            `Timestamp: ${new Date().toLocaleString()}\n\n` +
            `Please process this cancellation immediately.`
          );
          
          // Send email to admin
          window.open(`mailto:admin@{{ shop.domain }}?subject=${subject}&body=${body}`, '_blank');
          
          // Show confirmation to customer
          alert('⏳ Your cancellation request has been submitted and will be processed within 2 hours. You will receive an email confirmation.');
        }
        
        cancelOrder();
      })();
    </script>
  {%- else -%}
    <script>
      alert('❌ Order not found or already cancelled.');
    </script>
  {%- endif -%}
{%- endif -%}